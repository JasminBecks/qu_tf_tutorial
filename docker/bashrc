# this file is an adaption of the original file in the tensorflor/tensorflow image

export PS1="\[\033[1;37m\]qutf:\[\033[0m\]\[\033[32m\]\w\[\033[0m\] \[\033[1;37m\]>\[\033[0m\] "
export TERM=xterm-256color
alias run_tutorial="jupyter trust tutorial.ipynb; jupyter notebook --ip 0.0.0.0 --port \$NB_PORT --no-browser --NotebookApp.custom_display_url=http://localhost:\$NB_PORT"

echo -e "\e[1;31m"
cat <<BANNER

  ____________   ______      __             _       __
 /_  __/ ____/  /_  __/_  __/ /_____  _____(_)___ _/ /
  / / / /_       / / / / / / __/ __ \/ ___/ / __ \`/ / 
 / / / __/      / / / /_/ / /_/ /_/ / /  / / /_/ / /  
/_/ /_/        /_/  \__,_/\__/\____/_/  /_/\__,_/_/ 

Platform for Challenges in Data Science
Quantum Universe Cluster

BANNER

if [ "$EUID" = "0" ]; then
    echo -e "\e[0;33m"
    cat <<WARN
WARNING: You are running this container as root, which can cause new files in
mounted volumes to be created as the root user on your host machine.
To avoid this, run the container by specifying your user's userid:
$ docker run -u \$(id -u):\$(id -g) args...
WARN

else
    echo -e "\e[0;37m"
    cat <<EXPL
You are running this container as user with ID $(id -u) and group $(id -g),
which should map to the ID and group for your user on the Docker host. Great!
EXPL

    export HOME="/home/user"
    export QUTF_PYV="$( python -c "import sys; print('{0.major}.{0.minor}'.format(sys.version_info))" )"
    export PYTHONPATH="$PYTHONPATH:$HOME/.local/lib/python${QUTF_PYV}/site-packages"
fi

echo -e "\e[0;32m"

echo "Type 'run_tutorial' to start the tutorial notebook."

echo -e "\e[m"
